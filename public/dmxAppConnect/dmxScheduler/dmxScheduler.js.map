{"version":3,"sources":["components/scheduler.js"],"names":["dmx","Component","initialData","running","percent","attributes","delay","type","Number","default","unit","String","enum","noprogress","Boolean","norepeat","noload","methods","start","this","_start","stop","_stop","events","tick","Event","render","init","props","destroy","set","_startTime","Date","now","_tick","clearTimeout","_timer","data","dispatchEvent","setTimeout","_delay","elapsed","total","Math","ceil","requestAnimationFrame"],"mappings":";;;;;;AAAAA,IAAAC,UAAA,YAAA,CAEAC,YAAA,CACAC,SAAA,EACAC,QAAA,GAGAC,WAAA,CACAC,MAAA,CACAC,KAAAC,OACAC,QAAA,IAGAC,KAAA,CACAH,KAAAI,OACAF,QAAA,UACAG,KAAA,CAAA,cAAA,UAAA,UAAA,QAAA,SAGAC,WAAA,CACAN,KAAAO,QACAL,SAAA,GAGAM,SAAA,CACAR,KAAAO,QACAL,SAAA,GAGAO,OAAA,CACAT,KAAAO,QACAL,SAAA,IAIAQ,QAAA,CACAC,QACAC,KAAAC,QACA,EAEAC,OACAF,KAAAG,OACA,GAGAC,OAAA,CACAC,KAAAC,OAGAC,QAAA,EAEAC,OACAR,KAAAS,MAAAZ,QACAG,KAAAC,QAEA,EAEAS,UACAV,KAAAG,OACA,EAEAF,SACAD,KAAAW,IAAA,WAAA,GACAX,KAAAY,WAAAC,KAAAC,MACAd,KAAAe,OACA,EAEAZ,QACAa,aAAAhB,KAAAiB,QACAjB,KAAAW,IAAA,WAAA,GACAX,KAAAW,IAAA,UAAA,EACA,EAEAI,QACA,GAAAf,KAAAkB,KAAAlC,QAIA,GAAAgB,KAAAS,MAAAf,WACAM,KAAAmB,cAAA,QAEAnB,KAAAS,MAAAb,WACAI,KAAAiB,OAAAG,YAAA,IAAApB,KAAAe,SAAAf,KAAAqB,eAEA,CACA,IAAAC,EAAAT,KAAAC,MAAAd,KAAAY,WACAW,EAAAvB,KAAAqB,SAEAC,GAAAC,GACAvB,KAAAW,IAAA,UAAA,KAEAX,KAAAmB,cAAA,QAEAnB,KAAAS,MAAAb,SACAI,KAAAG,QAEAH,KAAAC,WAGAD,KAAAW,IAAA,UAAAa,KAAAC,KAAA,IAAAH,EAAAC,IACAG,uBAAA,IAAA1B,KAAAe,UAEA,CACA,EAEAM,SACA,OAAArB,KAAAS,MAAAlB,MACA,IAAA,cACA,OAAAS,KAAAS,MAAAtB,MACA,IAAA,UACA,OAAA,IAAAa,KAAAS,MAAAtB,MACA,IAAA,QACA,OAAA,KAAAa,KAAAS,MAAAtB,MACA,IAAA,OACA,OAAA,MAAAa,KAAAS,MAAAtB,MACA,QAEA,OAAA,IAAAa,KAAAS,MAAAtB,MAEA","file":"dmxScheduler.js","sourcesContent":["dmx.Component('scheduler', {\r\n\r\n  initialData: {\r\n    running: false,\r\n    percent: 0,\r\n  },\r\n\r\n  attributes: {\r\n    delay: {\r\n      type: Number,\r\n      default: 60,\r\n    },\r\n\r\n    unit: {\r\n      type: String,\r\n      default: 'seconds',\r\n      enum: ['miliseconds', 'seconds', 'minutes', 'hours', 'days'],\r\n    },\r\n\r\n    noprogress: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    norepeat: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    noload: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    start () {\r\n      this._start();\r\n    },\r\n\r\n    stop () {\r\n      this._stop();\r\n    },\r\n  },\r\n\r\n  events: {\r\n    tick: Event,\r\n  },\r\n\r\n  render: false,\r\n\r\n  init () {\r\n    if (!this.props.noload) {\r\n      this._start();\r\n    }\r\n  },\r\n\r\n  destroy () {\r\n    this._stop();\r\n  },\r\n\r\n  _start () {\r\n    this.set('running', true);\r\n    this._startTime = Date.now();\r\n    this._tick();\r\n  },\r\n\r\n  _stop () {\r\n    clearTimeout(this._timer);\r\n    this.set('running', false);\r\n    this.set('percent', 0);\r\n  },\r\n\r\n  _tick () {\r\n    if (!this.data.running) {\r\n      return;\r\n    }\r\n\r\n    if (this.props.noprogress) {\r\n      this.dispatchEvent('tick');\r\n\r\n      if (!this.props.norepeat) {\r\n        this._timer = setTimeout(() => this._tick(), this._delay());\r\n      }\r\n    } else {\r\n      let elapsed = Date.now() - this._startTime;\r\n      let total = this._delay();\r\n\r\n      if (elapsed >= total) {\r\n        this.set('percent', 100);\r\n\r\n        this.dispatchEvent('tick');\r\n\r\n        if (this.props.norepeat) {\r\n          this._stop();\r\n        } else {\r\n          this._start();\r\n        }\r\n      } else {\r\n        this.set('percent', Math.ceil((100 * elapsed) / total));\r\n        requestAnimationFrame(() => this._tick());\r\n      }\r\n    }\r\n  },\r\n\r\n  _delay () {\r\n    switch (this.props.unit) {\r\n      case 'miliseconds':\r\n        return this.props.delay;\r\n      case 'minutes':\r\n        return this.props.delay * 60000;\r\n      case 'hours':\r\n        return this.props.delay * 3600000;\r\n      case 'days':\r\n        return this.props.delay * 86400000;\r\n      default:\r\n        // default seconds\r\n        return this.props.delay * 1000;\r\n    }\r\n  },\r\n  \r\n});\r\n"]}